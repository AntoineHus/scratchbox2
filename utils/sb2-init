#!/bin/bash
# sb2-init - Copyright (C) 2007 Lauri Leukkunen <lle@rahina.org>
# Licensed under GPL version 2


SBOX_DIR=$(readlink -f $(dirname $_)/..)

if [[ "$1" = "" || "$1" = "--help" ]]; then
	echo "Usage: sb2-init [compiler]"
	echo "example: sb2-init arm-linux-gcc"
	exit 0
fi

GCC=$1

GCC_FULLPATH=$(which $GCC)
# test that gcc exists and can be executed
if [ $? != 0 ]; then
	echo "$GCC doesn't exist"
	exit 1
fi
GCC_PATH=$(dirname $(which $GCC))
if [ $GCC -v > /dev/null 2>&1 != 0 ]; then
	echo "Invalid compiler specified: $GCC"
	exit 1
fi

GCC_PREFIX=$(basename $GCC | sed 's/-gcc$/-/')
ARCH=$($GCC -dumpmachine | awk -F- '{ print $1 }')
QEMU=$(which qemu-$ARCH)
if [ $? != 0 ]; then
	echo "You don't have qemu-$ARCH installed."
	exit 1
fi

function write_sb2config()
{
	cat - > sb2.config <<EOF
# Scratchbox2 configuration file generated by sb2-init.

SBOX_CPU=$ARCH
SBOX_OS=none-linux-gnueabi
SBOX_CPUTRANSPARENCY_METHOD=$QEMU

SBOX_DEFAULT_GCC_PREFIX=$GCC_PREFIX

SBOX_CROSS_GCC_NAME=cross-gcc
SBOX_CROSS_GCC_PREFIX_LIST=$ARCH-linux-gnueabi-:$ARCH-linux-:$GCC_PREFIX
SBOX_CROSS_GCC_SUBST_PREFIX=$GCC_PREFIX
SBOX_CROSS_GCC_SPECS_FILE=
SBOX_CROSS_GCC_DIR=$GCC_PATH
SBOX_CROSS_GCC_LD_ARGS=

SBOX_HOST_GCC_NAME=host-gcc
SBOX_HOST_GCC_PREFIX_LIST=host-
SBOX_HOST_GCC_SUBST_PREFIX=
SBOX_HOST_GCC_SPECS_FILE=
SBOX_HOST_GCC_DIR=/usr/bin
SBOX_HOST_GCC_LD_ARGS=
EOF
	echo "Finished writing sb2.config"
}

function check_buildroot_sanity()
{
	a_ok=1

	if [ ! -e usr/include/stdio.h ]; then
		echo "no usr/include/stdio.h"
		a_ok=0
	fi

	if [ ! -e lib/libc.so.6 ]; then
		echo "no lib/libc.so.6"
		a_ok=0
	fi

	if [ ! -e usr/lib/libc.so ]; then
		echo "no usr/lib/libc.so"
		a_ok=0
	fi
	
	if [ $a_ok == 1 ]; then
		true
	else
		false
	fi
}

check_buildroot_sanity
if [ $? != 0 ]; then
	echo "Your buildroot seems to lack basic essentials like headers 
or c-library. You should probably get either a ready rootfs tarball or
copy the necessary files from your toolchain into place. After doing that
you can re-run this script."
	exit 1
fi

mkdir -p sb_tools/bin
write_sb2config

$SBOX_DIR/bin/sb2 -t . $SBOX_DIR/bin/sb2-build-libtool 

if [ $? == 0 ]; then
	echo "sb2-init completed successfully, have fun!"
else
	echo "Running $SBOX_DIR/bin/sb2-build-libtool failed"
	echo "You can run this manually later, otherwise your"
	echo "sb2 environment is correctly setup and ready to use"
fi


