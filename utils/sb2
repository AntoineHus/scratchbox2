#!/bin/bash
# Copyright (C) 2006,2007 Lauri Leukkunen <lle@rahina.org>
# Licensed under GPL version 2

export SBOX_DIR=$(readlink -f $(dirname $_)/..)

if [ -n "$SBOX_DIR" ]; then
	SBOX_LIBSB2="$SBOX_DIR/lib/libsb2.so"
	SBOX_REDIR_SCRIPTS="$SBOX_DIR/share/scratchbox2/redir_scripts"
	SBOX_GCCWRAPPER="$SBOX_DIR/bin/sb_gcc_wrapper"
else
	echo Something foul happeninged...
	exit 1
fi

if [ -n "$SBOX_TOOLS_ROOT" ]; then
	REDIR_LD_SO="$SBOX_TOOLS_DIR/lib/ld-linux.so.2"
	REDIR_LD_LIBRARY_PATH="$SBOX_TOOLS_DIR/lib:$SBOX_TOOLS_DIR/usr/lib:$SBOX_TOOLS_DIR/usr/local/lib"

	export REDIR_LD_SO REDIR_LD_LIBRARY_PATH SBOX_TOOLS_ROOT
fi

if [ -z "$SBOX_TARGET_ROOT" ]; then
	SBOX_TARGET_ROOT="$(readlink -f -n $PWD)"
fi

SBOX_MAPPING_CACHE=$SBOX_TARGET_ROOT.sb2cache
if [ ! -d $SBOX_MAPPING_CACHE ]; then
	mkdir -p $SBOX_MAPPING_CACHE
fi

export SBOX_LIBSB2 SBOX_REDIR_SCRIPTS SBOX_TARGET_ROOT SBOX_MAPPING_CACHE SBOX_GCCWRAPPER SBOX_TARGET_COMPILER

cd $SBOX_TARGET_ROOT

HOST_GCC_INC_DIR=$(echo "#include <stdio.h>" | gcc -M -E - | perl -e 'while(<STDIN>) { $foo{$1} = 1 if m/\/usr([^[:space:]]*\/include)/;}; foreach my $k (keys %foo) {print " -isystem $ENV{SBOX_DIR}/share/scratchbox2/host_usr$k"};')

export PATH=$SBOX_TARGET_ROOT/sb_tools/bin:$SBOX_DIR/bin:$PATH:$SBOX_TARGET_ROOT/bin:$SBOX_TARGET_ROOT/usr/bin:$SBOX_TARGET_ROOT/usr/local/bin:/sbin:/usr/sbin
export LD_PRELOAD=$SBOX_LIBSB2
export SBOX_EXTRA_HOST_COMPILER_ARGS="$HOST_GCC_INC_DIR"
export SBOX_EXTRA_CROSS_COMPILER_ARGS="--sysroot=$SBOX_TARGET_ROOT -isystem $SBOX_TARGET_ROOT/usr/local/include -isystem $SBOX_TARGET_ROOT/usr/include -I$SBOX_TARGET_ROOT/usr/local/include -I$SBOX_TARGET_ROOT/usr/include -L$SBOX_TARGET_ROOT/usr/local/lib -L$SBOX_TARGET_ROOT/usr/lib -L$SBOX_TARGET_ROOT/lib"
export SBOX_EXTRA_CROSS_LD_ARGS="-rpath-link $SBOX_TARGET_ROOT/usr/local/lib:$SBOX_TARGET_ROOT/usr/lib:$SBOX_TARGET_ROOT/lib"
export SBOX_SCRATCHBOX_CONFIG=$SBOX_TARGET_ROOT/sb2.config
export PS1="[SB2] \u@\h \w \$ "

echo "Running scratchbox with these settings:"
echo "SBOX_LIBSB2 = $SBOX_LIBSB2"
echo "SBOX_REDIR_SCRIPTS = $SBOX_REDIR_SCRIPTS"
echo "SBOX_GCCWRAPPER = $SBOX_GCCWRAPPER"
echo "REDIR_LD_SO = $REDIR_LD_SO"
echo "REDIR_LD_LIBRARY_PATH = $REDIR_LD_LIBRARY_PATH"
echo "SBOX_TARGET_ROOT = $SBOX_TARGET_ROOT"

. $SBOX_SCRATCHBOX_CONFIG

export SBOX_COMPILER_ROOT=$(readlink -f $SBOX_CROSS_GCC_DIR/..)
export SBOX_CPUTRANSPARENCY_METHOD
export SBOX_CROSS_GCC_PREFIX_LIST
export SBOX_HOST_GCC_PREFIX_LIST
export SBOX_UNAME_MACHINE=$SBOX_CPU

# Debian exports
if [ $SBOX_CPU = "arm" ]; then
	export DEB_BUILD_ARCH=armel
else
	export DEB_BUILD_ARCH=$SBOX_CPU
fi
export DEB_BUILD_ARCH_CPU=$SBOX_CPU
export DEB_BUILD_GNU_CPU=$SBOX_CPU
export DEB_BUILD_GNU_TYPE=$SBOX_CPU-linux-gnu

sb_map_verbose=$1

sb_bash_args=$*

if [ "$sb_map_verbose" == "--verbose" ]; then
	export SBOX_MAPPING_VERBOSE=1 # enable mapping rules debug output
	export SBOX_DISABLE_MAPPING_CACHE=1 # disable the cache to force use of lua engine
	export SBOX_MAPPING_LOGFILE=$PWD/sb2_mapping.log
	sb_bash_args=$(echo $* | sed 's/^--verbose//')
fi

# set the initial binary name for the mapping engine
export __SB2_BINARYNAME="bash"

if [ -z "$sb_bash_args" ]; then
	exec /bin/bash --noprofile --norc
else
	exec /bin/bash --noprofile --norc -c "$sb_bash_args"
fi

