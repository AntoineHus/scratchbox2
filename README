All files are licensed under GNU LGPL version 2.1 unless specifically 
stated otherwise in the file itself.

This is development code, it is broken. Don't expect to use it for
anything resembling production use. However, I firmly believe this is
infinitely more functional than Scratchbox 1.x can ever be.

Here are some instructions:

You need git to work with sbox2, get it from http://git.or.cz/.

Clone the scratchbox 2 repository:

$ git clone git://anongit.freedesktop.org/git/sbox2


Build using:

$ cd sbox2
$ ./autogen.sh
$ ./configure
$ make
$ make install prefix=$HOME/scratchbox


You need Qemu for cpu-transparency. Debian/Etch and Debian/unstable provide
a good one. If all else fails, there's a static qemu-arm-0.8.1-sb2
available on http://freedesktop.org/wiki/Software_2fsbox2.

If you're targeting ARM, you can get a good toolchain from CodeSourcery:
http://www.codesourcery.com/gnu_toolchains/arm/download.html


Now complete sb2 target setup:

$ mkdir $HOME/buildroot
$ cd $HOME/buildroot
$ $HOME/scratchbox/bin/sb2-init arm-none-linux-gnueabi-gcc

That will automatically generate a working sb2.config for the compiler
which is given on the command line.

At this point you can simply run sb2:

$ ../scratchbox/bin/sb2


For Maemo (http://www.maemo.org/) development you can download
the latest rootstrap:
http://repository.maemo.org/stable/3.0/armel/maemo-sdk-rootstrap_3.0_armel.tgz)
Extract that to $HOME/buildroot.

Then build a proper libtool for your active toolchain by running 
this inside sb2:

$ $HOME/scratchbox/bin/sb2-build-libtool.sh

In order to build debian packages, you have to use -d switch for
dpkg-buildpackage to skip build dependency checking. A proper
command line would be for example:

dpkg-buildpackage -rfakeroot -d


That's all folks, enjoy!

